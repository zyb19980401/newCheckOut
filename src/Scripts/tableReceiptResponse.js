var tableHTML = '<table class="zebraTable" style="font-size:12px;"> <tr> <th style="width: 50%;">Response Field Name and Key</th> <th style="width: 50%;">Description</th> </tr> <tr id="response" class="parent" style="background-color: #dbe9f1;cursor: pointer;"> <td>response<br> <code class="simpleCode">{"response":{</code> </td> <td>Top level response object</td> </tr> <tr class="child-response"> <td>&emsp;success<br> &emsp;<code class="simpleCode">"success":</code></td> <td>Denotes whether request was successful (i.e., approved, declined)<br> <br> Unsuccessful means error or could not process<br> <br> Possible values: <code class="simpleCode">true</code> or <code class="simpleCode">false</code> </td> </tr> <tr id="request" class="parent child-response" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;request<br> &emsp;<code class="simpleCode">"request":{</code></td> <td>Contains information relating to the Preload request and other information that Moneris Checkout sends to the Moneris Gateway when processing the financial transaction</td> </tr> <tr class="child-request"> <td>&emsp;&emsp;transaction total amount<br> &emsp;&emsp;<code class="simpleCode">"txn_total":</code></td> <td>The total dollar amount of the transaction</td> </tr> <tr class="child-request"> <td>&emsp;&emsp;credit card total<br> &emsp;&emsp;<code class="simpleCode">"cc_total":</code></td> <td>Total amount being charged to the credit card</td> </tr> <tr class="child-request"> <td>&emsp;&emsp;ticket number<br> &emsp;&emsp;<code class="simpleCode">"ticket":</code></td> <td>The unique ticket number that identifies a particular transaction; this returned in the response to the Preload request</td> </tr> <tr class="child-request"> <td>&emsp;&emsp;customer ID<br> &emsp;&emsp;<code class="simpleCode">"cust_id":</code></td> <td>Merchant-defined field that can be used as an identifier<br> <br> Searchable from the Moneris Merchant Resource Center </td> </tr> <tr class="child-request"> <td>&emsp;&emsp;dynamic descriptor<br> &emsp;&emsp;<code class="simpleCode">"dynamic descriptor":</code></td> <td> Merchant-defined description sent on a per-transaction basis that will appear on the credit card statement appended to the merchant\'s business name<br> <br> Dependent on the card issuer, the statement will typically show the dynamic descriptor appended to the merchant\'s existing business name separated by the "/" character; additional characters will be truncated<br> <br> <strong>NOTE:</strong> The 22-character maximum limit must take the "/" into account as one of the characters </td> </tr> <tr class="child-request"> <td>&emsp;&emsp;order number<br> &emsp;&emsp;<code class="simpleCode">"order_no":</code></td> <td>The order number is a unique identifier appended to every financial transaction</td> </tr> <tr class="child-request"> <td>&emsp;&emsp;electronic commerce indicator<br> &emsp;&emsp;<code class="simpleCode">"eci":</code></td> <td>The e-commerce indicator or crypt type that was used to process the transaction<br> <br> Possible values are:<br> <br> 5 - Authenticated e-commerce transaction (3-D Secure)<br> <br> 6 - Non-authenticated e-commerce transaction (3-D Secure)<br> <br> 7 - SSL-enabled merchant </td> </tr> <tr id="custinfo" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Customer Information<br> &emsp;&emsp;<code class="simpleCode">"cust_info":{</code></td> <td>Customer contact information<br> <br> The information presented in this response object will reflect one of three scenarios:<br> <br> If sent in the Preload request, this object will echo the Contact Details object<br> <br> If Moneris Checkout is set to handle the customer contact information, it will reflect what the customer entered in the web form<br> <br> If Moneris Checkout was set to not ask for this information, the response object will be empty </td> </tr> <tr class="child-custinfo"> <td>&emsp;&emsp;&emsp;first name<br> &emsp;&emsp;&emsp;<code class="simpleCode">"first_name":</code></td> <td>Customer first name</td> </tr> <tr class="child-custinfo"> <td>&emsp;&emsp;&emsp;last name<br> &emsp;&emsp;&emsp;<code class="simpleCode">"last_name":</code></td> <td>Customer last name</td> </tr> <tr class="child-custinfo"> <td>&emsp;&emsp;&emsp;phone number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"phone":</code></td> <td>Customer phone number</td> </tr> <tr class="child-custinfo"> <td>&emsp;&emsp;&emsp;email<br> &emsp;&emsp;&emsp;<code class="simpleCode">"email":</code></td> <td>Customer email</td> </tr> <tr id="shipping" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Shipping<br> &emsp;&emsp;<code class="simpleCode">"shipping":{</code></td> <td>Contains customer shipping information<br> <br> The information presented in this response object will reflect one of three scenarios:<br> <br> If sent in the Preload request, this object will echo the Shipping Details object<br> If Moneris Checkout is set to handle the customer shipping information, it will reflect what the customer entered in the web form<br> If Moneris Checkout was set to not ask for this information, the response object will be empty </td> </tr> <tr class="child-shipping"> <td>&emsp;&emsp;&emsp;shipping address line 1<br> &emsp;&emsp;&emsp;<code class="simpleCode">"address_1":</code></td> <td>Customer shipping address</td> </tr> <tr class="child-shipping"> <td>&emsp;&emsp;&emsp;shipping address line 2<br> &emsp;&emsp;&emsp;<code class="simpleCode">"address_2":</code></td> <td>Customer shipping address</td> </tr> <tr class="child-shipping"> <td>&emsp;&emsp;&emsp;shipping city<br> &emsp;&emsp;&emsp;<code class="simpleCode">"city":</code></td> <td>Customer shipping address city</td> </tr> <tr class="child-shipping"> <td>&emsp;&emsp;&emsp;shipping country<br> &emsp;&emsp;&emsp;<code class="simpleCode">"country":</code></td> <td>Customer shipping address country</td> </tr> <tr class="child-shipping"> <td>&emsp;&emsp;&emsp;shipping province<br> &emsp;&emsp;&emsp;<code class="simpleCode">"province":</code></td> <td>Customer shipping address province</td> </tr> <tr class="child-shipping"> <td>&emsp;&emsp;&emsp;shipping postal code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"postal_code":</code></td> <td>Customer shipping address postal code</td> </tr> <tr id="billing" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Billing<br> &emsp;&emsp;<code class="simpleCode">"billing":{</code></td> <td>Contains customer billing information The information presented in this response object will reflect one of three scenarios: If sent in the Preload request, this object will echo the Billing Details object If Moneris Checkout is set to handle the customer billing information, it will reflect what the customer entered in the web form If Moneris Checkout was set to not ask for this information, the response object will be empty </td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;billing address line 1<br> &emsp;&emsp;&emsp;<code class="simpleCode">"address_1":</code></td> <td>Customer billing address</td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;billing address line 2<br> &emsp;&emsp;&emsp;<code class="simpleCode">"address_2":</code></td> <td>Customer billing address</td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;billing city<br> &emsp;&emsp;&emsp;<code class="simpleCode">"city":</code></td> <td>Customer billing address city</td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;billing country<br> &emsp;&emsp;&emsp;<code class="simpleCode">"country":</code></td> <td>Customer billing address country</td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;billing province<br> &emsp;&emsp;&emsp;<code class="simpleCode">"province":</code></td> <td>Customer billing address province</td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;billing postal code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"postal_code":</code></td> <td>Customer billing address postal code</td> </tr> <tr class="child-billing"> <td>&emsp;&emsp;&emsp;same as shipping<br> &emsp;&emsp;&emsp;<code class="simpleCode">"same_as_shipping":</code></td> <td>Indicates whether the shipping address is the same as the billing address<br> <br> Possible values: <code class="simpleCode">true</code> or <code class="simpleCode">false</code> </td> </tr> <tr id="recur" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Recurring Billing<br> &emsp;&emsp;<code class="simpleCode">"recur":{</code></td> <td>Contains fields related to Recurring Billing</td> </tr> <tr class="child-recur"> <td>&emsp;&emsp;&emsp;number of recurs<br> &emsp;&emsp;&emsp;<code class="simpleCode">"number_of_recurs":</code></td> <td>The number of times that the transaction must recur</td> </tr> <tr class="child-recur"> <td>&emsp;&emsp;&emsp;period<br> &emsp;&emsp;&emsp;<code class="simpleCode">"recur_period":</code></td> <td>Number of recur unit intervals that must pass between recurring billings</td> </tr> <tr class="child-recur"> <td>&emsp;&emsp;&emsp;recurring amount<br> &emsp;&emsp;&emsp;<code class="simpleCode">"recur_amount":</code></td> <td>Dollar amount of the recurring transaction<br> <br> This amount will be billed on the start date, and then billed repeatedly based on the interval defined by period and recur unit </td> </tr> <tr class="child-recur"> <td>&emsp;&emsp;&emsp;recur unit<br> &emsp;&emsp;&emsp;<code class="simpleCode">"recur_unit":</code></td> <td>Unit to be used as a basis for the interval<br> <br> Works in conjunction with the period variable to define the billing frequency </td> </tr> <tr class="child-recur"> <td>&emsp;&emsp;&emsp;start date<br> &emsp;&emsp;&emsp;<code class="simpleCode">"start_date":</code></td> <td>Date of the first future recurring billing transaction; this must be a date in the future<br> <br> If an additional charge will be made immediately, the start now variable must be set to true </td> </tr> <tr class="child-recur"> <td>&emsp;&emsp;&emsp;bill now<br> <br> &emsp;&emsp;&emsp;<code class="simpleCode">"bill_now":</code></td> <td>Set to true if a charge will be made against the card immediately; otherwise set to false</td> </tr> <tr id="shoppingcart" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Shopping Cart<br> &emsp;&emsp;<code class="simpleCode">"cart":{</code></td> <td>The virtual shopping cart and its contents<br> <br> This echos the information contained in the Shopping Cart request object </td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;shopping cart items<br> &emsp;&emsp;&emsp;<code class="simpleCode">"items":[{</code></td> <td>Encapsulates the entire array of items in the shopping cart</td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;&emsp;item URL<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"url":</code></td> <td>URL that corresponds to the image of the Moneris Checkout shopping cart item</td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;&emsp;item description<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"description":</code></td> <td>Describes the item in the shopping cart</td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;&emsp;item product code<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"product_code":</code></td> <td>The SKU for the item</td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;&emsp;item unit cost<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"unit_cost":</code></td> <td>Per-unit cost of the item</td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;&emsp;item quantity<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"quantity":</code></td> <td>Number of individual instances of the given item in the shopping cart</td> </tr> <tr class="child-shoppingcart"> <td>&emsp;&emsp;&emsp;subtotal<br> &emsp;&emsp;&emsp;<code class="simpleCode">"subtotal":</code></td> <td>Total dollar amount of the shopping cart, before taxes</td> </tr> <tr id="tax" class="parent child-shoppingcart" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;tax<br> &emsp;&emsp;&emsp;<code class="simpleCode">"tax":{</code></td> <td>Contains information related to taxes charged on the items in the shopping cart</td> </tr> <tr class="child-tax"> <td>&emsp;&emsp;&emsp;&emsp;tax amount<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"amount":</code></td> <td>Dollar amount of taxes</td> </tr> <tr class="child-tax"> <td>&emsp;&emsp;&emsp;&emsp;tax description<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"description":</code></td> <td>Describes type of tax being applied</td> </tr> <tr class="child-tax"> <td>&emsp;&emsp;&emsp;&emsp;tax rate<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"rate":</code></td> <td>Percentage tax rate charged</td> </tr> <tr id="requestcc" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Credit Card (request)<br> &emsp;&emsp;<code class="simpleCode">"cc":{</code></td> <td>Contains cardholder information</td> </tr> <tr class="child-requestcc"> <td>&emsp;&emsp;&emsp;first 6 last 4<br> &emsp;&emsp;&emsp;<code class="simpleCode">"first6last4":</code></td> <td>First 6 and last 4 digits of card number</td> </tr> <tr class="child-requestcc"> <td>&emsp;&emsp;&emsp;expiry date<br> &emsp;&emsp;&emsp;<code class="simpleCode">"expiry":</code></td> <td>Card expiry date</td> </tr> <tr class="child-requestcc"> <td>&emsp;&emsp;&emsp;cardholder<br> &emsp;&emsp;&emsp;<code class="simpleCode">"cardholder":</code></td> <td>Cardholder name</td> </tr> <tr id="requestgift" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Gift (request)<br> &emsp;&emsp;<code class="simpleCode">"gift":[{</code></td> <td>Object containing information about a gift card</td> </tr> <tr class="child-requestgift"> <td>&emsp;&emsp;&emsp;balance remaining<br> &emsp;&emsp;&emsp;<code class="simpleCode">"balance_remaining":</code></td> <td>The remaining balance on the gift card</td> </tr> <tr class="child-requestgift"> <td>&emsp;&emsp;&emsp;gift card description<br> &emsp;&emsp;&emsp;<code class="simpleCode">"description":</code></td> <td>Description of the gift card used for the transaction</td> </tr> <tr class="child-requestgift"> <td>&emsp;&emsp;&emsp;first 4 last 4<br> &emsp;&emsp;&emsp;<code class="simpleCode">"first4last4":</code></td> <td>The first 4 and last 4 digits of the card</td> </tr> <tr class="child-requestgift"> <td>&emsp;&emsp;&emsp;gift card number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"pan":</code></td> <td>The account number of the gift card</td> </tr> <tr class="child-requestgift"> <td>&emsp;&emsp;&emsp;gift card CVD<br> &emsp;&emsp;&emsp;<code class="simpleCode">"cvd":</code></td> <td>Card validation digits on the gift card</td> </tr> <tr class="child-requestgift"> <td>&emsp;&emsp;&emsp;balance used<br> &emsp;&emsp;&emsp;<code class="simpleCode">"balance_used":</code></td> <td>The amount that was removed from the card\'s balance as part of the transaction</td> </tr> <tr id="wallet" class="parent child-request" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Wallet<br> &emsp;&emsp;<code class="simpleCode">"wallet":</code></td> <td>Contains information from the digital wallet that was used in the transaction</td> </tr> <tr class="child-wallet"> <td>&emsp;&emsp;&emsp;wallet type<br> &emsp;&emsp;&emsp;<code class="simpleCode">"type":</code></td> <td>Type of digital wallet used in this transaction</td> </tr> <tr id="paymentData" class="parent child-wallet" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;payment data<br> &emsp;&emsp;&emsp;<code class="simpleCode">"paymentData":{</code></td> <td>Object containing various information related to the payment sent from the digital wallet</td> </tr> <tr class="child-paymentData"> <td>&emsp;&emsp;&emsp;&emsp;API version (minor)<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"apiVersionMinor":</code></td> <td>Minor version of the API</td> </tr> <tr class="child-paymentData"> <td>&emsp;&emsp;&emsp;&emsp;API version<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"apiVersion":</code></td> <td>Version of the digital wallet\'s payment API</td> </tr> <tr id="paymentMethodData" class="parent child-paymentData" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;payment method data<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"paymentMethodData":{</code></td> <td>Object containing information about the payment method used in the transaction</td> </tr> <tr class="child-paymentMethodData"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;payment method description<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"description":</code></td> <td>User-facing message to describe the payment method that funds this transaction</td> </tr> <tr id="walletTokenization" class="parent child-paymentMethodData" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;tokenization data<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"tokenizationData":{</code></td> <td>Object containing information related to tokenization and the digital wallet</td> </tr> <tr class="child-walletTokenization"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;tokenization type<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"type":</code></td> <td>The type of tokenization to be applied to the selected payment method<br> <br> Possible values: <code class="simpleCode">PAYMENT_GATEWAY</code> or <code class="simpleCode">DIRECT</code> </td> </tr> <tr class="child-walletTokenization"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;token<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"token":</code></td> <td>The generated payment method token</td> </tr> <tr class="child-paymentMethodData"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;payment method type<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"type":</code></td> <td>A short identifier for the supported payment method Possible values:<br> <br> CARD<br> PAYPAL </td> </tr> <tr id="info" class="parent child-paymentMethodData" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;info<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"info":{</code></td> <td>Object that echoes information about the cardholder, the card and the card network from the digital wallet</td> </tr> <tr class="child-info"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;card network<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"cardNetwork":</code></td> <td>The payment card network</td> </tr> <tr class="child-info"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;card details<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"cardDetails":</code></td> <td>The details about the card; this value is commonly the last four digits of the selected payment account number</td> </tr> <tr id="walletBilling" class="parent child-info" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;digital wallet billing address<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"billingAddress":{</code></td> <td>Object that echoes the cardholder\'s billing information from the digital wallet</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;address 3<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"address3":</code></td> <td>Third line of the address</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;sorting code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"sortingCode":</code></td> <td>The sorting code</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;address 2<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"address2":</code></td> <td>Second line of the address</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;country code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"countryCode":</code></td> <td>ISO 3166-1 alpha-2 country code</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;address 1<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"address1":</code></td> <td>First line of the address</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;postal code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"postalCode":</code></td> <td>Address postal code or ZIP</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;name<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"name":</code></td> <td>Name of the address</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;locality<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"locality":</code></td> <td>City, town, neighbourhood, or suburb</td> </tr> <tr class="child-walletBilling"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;administrative area<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"administrativeArea":</code></td> <td>A country subdivision, such as a state or province</td> </tr> <tr id="walletShipping" class="parent child-info" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;digital wallet shipping address<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"shippingAddress":{</code></td> <td>Object containing the cardholder\'s default shipping address information stored in the digital wallet</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;address 3<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"address3":</code></td> <td>Third line of the address</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;sorting code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"sortingCode":</code></td> <td>The sorting code</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;address 2<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"address2":</code></td> <td>Second line of the address</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;country code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"countryCode":</code></td> <td>ISO 3166-1 alpha-2 country code</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;postal code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"postalCode":</code></td> <td>Address postal code or ZIP</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;name<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"name":</code></td> <td>Name of the addressee</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;locality<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"locality":</code></td> <td>City, town, neighbourhood, or suburb</td> </tr> <tr class="child-walletShipping"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;administrative area<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"administrativeArea":</code></td> <td>A country subdivision, such as a state or province</td> </tr> <tr id="receipt" class="parent child-response" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;Receipt<br> &emsp;<code class="simpleCode">"receipt":{</code></td> <td>Object containing the receipt information</td> </tr> <tr class="child-receipt"> <td>&emsp;&emsp;result (financial transaction)<br> &emsp;&emsp;<code class="simpleCode">"result":</code></td> <td>Indicates the result of the financial transaction <br> <br> Possible values are:<br> <br> a: Accepted<br> d: Declined </td> </tr> <tr id="receiptgift" class="parent child-receipt" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Gift (receipt)<br> &emsp;&emsp;<code class="simpleCode">"gift":[{</code></td> <td>Contains information related to gift card</td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;order number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"order_no":</code></td> <td>The order number is a unique identifier appended to every financial transaction</td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;transaction number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"transaction_no":</code></td> <td>Moneris Gateway-specific transaction identifier<br> <br> This field is required for any future follow-on transaction requests, such as Refund, Purchase Correction and Pre-Authorization Completion transactions </td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;reference number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"reference_no":</code></td> <td>Terminal used to process the transaction, followed by the shift, batch and sequence number<br> <br> This data is typically used to reference transactions on the host systems, and must be displayed on any receipt presented to the customer<br> <br> This information should be stored by the merchant<br> <br> <strong>Example:</strong> 660123450010690030<br> <br> 66012345: Terminal ID<br> 001: Shift number<br> 069: Batch number<br> 003: Transaction number within the batch. </td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;response code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"response_code":</code></td> <td>Transaction response code<br> <br> Possible values are:<br> <br> &lt;50: transaction approved<br> &gt;=50: transaction declined<br> NULL: transaction was not sent for authorization<br> <br> For more details on specific response, please see the Response Codes reference topic </td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;benefit amount<br> &emsp;&emsp;&emsp;<code class="simpleCode">"benefit_amount":</code></td> <td>This is the benefit that was generated for the transaction; the amount that was removed from the card as part of the transaction</td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;benefit remaining<br> &emsp;&emsp;&emsp;<code class="simpleCode">"benefit_remaining":</code></td> <td>The remaining balance on the gift card</td> </tr> <tr class="child-receiptgift"> <td>&emsp;&emsp;&emsp;first 6 last 4<br> &emsp;&emsp;&emsp;<code class="simpleCode">"first6last4":</code></td> <td>First 6 and last 4 digits of card number</td> </tr> <tr id="receiptcc" class="parent child-receipt" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;Credit Card (receipt)<br> &emsp;&emsp;<code class="simpleCode">"cc":{</code></td> <td>Contains fields describing the response to the credit card transaction</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;order number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"order_no":</code></td> <td>The order number is a unique identifier appended to every financial transaction</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;customer ID<br> &emsp;&emsp;&emsp;<code class="simpleCode">"cust_id":</code></td> <td>Merchant-defined field that can be used as an identifier<br> <br> Searchable from the Moneris Merchant Resource Center </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;transaction number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"transaction_no":</code></td> <td>Used to reference the original transaction when performing a follow-on transaction (i.e., Pre-Authorization Completion, Purchase Correction or Refund)<br> <br> This value is returned in the response of the original transaction<br> <br> Pre-Authorization Completion: references a Pre-Authorization<br> <br> Refund/Purchase Correction: references a Purchase or Pre-Authorization Completion </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;reference number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"reference_no":</code></td> <td>Terminal used to process the transaction, followed by the shift, batch and sequence number<br> <br> This data is typically used to reference transactions on the host systems, and must be displayed on any receipt presented to the customer<br> <br> This information should be stored by the merchant<br> <br> <strong>Example:</strong> 660123450010690030<br> <br> 66012345: Terminal ID<br> 001: Shift number<br> 069: Batch number<br> 003: Transaction number within the batch. </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;transaction code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"transaction_code":</code></td> <td>Type of financial transaction that was performed<br> <br> Possible values:<br> <br> 00: Purchase<br> 01: Pre-Authorization<br> 06: Card Verification </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;transaction type<br> &emsp;&emsp;&emsp;<code class="simpleCode">"transaction_type":</code></td> <td>ISO transaction code for financial transaction</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;transaction date and time<br> &emsp;&emsp;&emsp;<code class="simpleCode">"transaction_date_time":</code></td> <td>Processing host date and time stamp<br> <br> Format: YYYY-MM-DD HH:MM:SS </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;corporate card<br> &emsp;&emsp;&emsp;<code class="simpleCode">"corporateCard":</code></td> <td>Indicates whether the payment card is a corporate card</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;credit card amount<br> &emsp;&emsp;&emsp;<code class="simpleCode">"amount":</code></td> <td>The total dollar amount that was charged to the credit card</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;response code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"response_code":</code></td> <td>Transaction response code<br> <br> Possible values are:<br> <br> &lt;50: transaction approved<br> &gt;=50: transaction declined<br> NULL: transaction was not sent for authorization<br> <br> For more details on specific response, please see the Response Codes reference topic </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;ISO response code<br> <br> &emsp;&emsp;&emsp;<code class="simpleCode">"iso_response_code":</code></td> <td>ISO response code returned from issuing institution<br> <br> For more details on specific ISO codes returned, see the Response Codes reference topic </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;approval code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"approval_code":</code></td> <td>Authorization code returned from the issuing institution</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;card type<br> &emsp;&emsp;&emsp;<code class="simpleCode">"card_type":</code></td> <td>Type of payment card used to process the transaction Allowable values:<br> <br> V: Visa<br> M: Mastercard<br> AX: American Express<br> DC: Diner\'s Card<br> NO: Novus/Discover<br> SE: Sears<br> D: INTERAC Debit<br> C1: JCB </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;wallet type<br> &emsp;&emsp;&emsp;<code class="simpleCode">"wallet_type":</code></td> <td>Type of digital wallet used in this transaction</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;dynamic descriptor<br> &emsp;&emsp;&emsp;<code class="simpleCode">"dynamic_descriptor":</code></td> <td>Merchant-defined description sent on a per-transaction basis that will appear on the credit card statement appended to the merchant\'s business name<br> <br> Dependent on the card issuer, the statement will typically show the dynamic descriptor appended to the merchant\'s existing business name separated by the "/" character; additional characters will be truncated<br> <br> <strong>NOTE:</strong> The 22-character maximum limit must take the "/" into account as one of the characters </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;invoice number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"invoice_number":</code></td> <td>Identifies an invoice number associated with the transaction</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;customer code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"customer_code":</code></td> <td>User-defined identifier</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;electronic commerce indicator<br> &emsp;&emsp;&emsp;<code class="simpleCode">"eci":</code></td> <td>The e-commerce indicator or crypt type that was used to process the transaction<br> <br> Possible values:<br> <br> 5: Authenticated e-commerce transaction (3D-Secure)<br> 6: Non-authenticated e-commerce transaction (3D-Secure)<br> 7: SSL-enabled merchant </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;CVD result code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"cvd_result_code":</code></td> <td>Indicates the CVD validation result<br> <br> The first byte is the numeric CVD indicator sent in the request; the second byte is the response code<br> <br> Possible response codes are shown in the <a href="https://developer.moneris.com/More/Testing/CVD%20Result%20Codes" target="_blank">CVD Response Codes</a> reference </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;AVS result code<br> &emsp;&emsp;&emsp;<code class="simpleCode">"avs_result_code":</code></td> <td>Indicates the address verification result<br> <br> For a full list of possible response codes refer to the <a href="https://developer.moneris.com/More/Testing/AVS%20Result%20Codes" target="_blank">AVS Response Codes</a> reference </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;"first6last4":<br> &emsp;&emsp;&emsp;<code class="simpleCode">"eci":</code></td> <td>First 6 and last 4 digits of card number</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;expiry date<br> &emsp;&emsp;&emsp;<code class="simpleCode">"expiry_date":</code></td> <td>Expiry date of the card<br> <br> MMYY format </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;recur success<br> &emsp;&emsp;&emsp;<code class="simpleCode">"recur_success":</code></td> <td>Indicates whether the recurring billing transaction has been successfully set up for future billing<br> <br> Possible values: <code class="simpleCode">true</code> or <code class="simpleCode">false</code> </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;issuer ID<br> &emsp;&emsp;&emsp;<code class="simpleCode">"issuer_id":</code></td> <td>Unique identifier for the cardholder\'s stored credentials<br> <br> Sent back in the response from the card brand when processing a Credential on File transaction<br> <br> If the cardholder\'s credentials are being stored for the first time, and the issuer ID was returned in the response, you must save the issuer ID on your system to use in subsequent Credential on File transactions (applies to merchant-initiated transactions only)<br> <br> The issuer ID must be saved to your systems when returned from Moneris Gateway in the response data, regardless if the value was received or not<br> <br> As a best practice, if the issuer ID is not returned and you received a value of NULL instead, store that value and send it in the subsequent transaction </td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;ECR (electronic cash register) number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"ecr_no":</code></td> <td>Terminal ID/ECR Number from the request</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;batch number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"batch_no":</code></td> <td>Batch number; also presented as a component of the reference number</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;sequence number<br> &emsp;&emsp;&emsp;<code class="simpleCode">"sequence_no":</code></td> <td>Transaction number within the batch; also presented as a component of reference number</td> </tr> <tr class="child-receiptcc"> <td>&emsp;&emsp;&emsp;result (financial transaction)<br> &emsp;&emsp;&emsp;<code class="simpleCode">"result":</code></td> <td>Indicates the result of the financial transaction<br> <br> Possible values are:<br> <br> a: Accepted<br> d: Declined </td> </tr> <tr id="tokenize" class="parent child-receiptcc" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;Tokenize<br> &emsp;&emsp;&emsp;<code class="simpleCode">"tokenize":{</code></td> <td>Contains information related to the tokenization of cardholder credentials</td> </tr> <tr class="child-tokenize"> <td>&emsp;&emsp;&emsp;&emsp;success (tokenize)<br> <br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"success":</code></td> <td>Indicates whether the card was successfully tokenized<br> <br> Possible values: <code class="simpleCode">true</code> or <code class="simpleCode">false</code> </td> </tr> <tr class="child-tokenize"> <td>&emsp;&emsp;&emsp;&emsp;first 4 last 4<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"first4last4":</code></td> <td>The first 4 and last 4 digits of the card</td> </tr> <tr class="child-tokenize"> <td>&emsp;&emsp;&emsp;&emsp;data key<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"data_key":</code></td> <td>Unique identifier for a Vault profile, and used in future Vault financial transactions to associate a transaction with that profile</td> </tr> <tr class="child-tokenize"> <td>&emsp;&emsp;&emsp;&emsp;tokenization status<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"status":</code></td> <td>Specifies what type of failure, if any, occurred during the tokenization request<br> Possible values:<br> 001: Successful creation of a temporary token<br> 940: Invalid profile id (on tokenization request)<br> 941: Error generating token<br> 942: Invalid Profile ID, or source URL<br> 943: Card data is invalid (not numeric, fails mod10, we will remove spaces)<br> 944: Invalid expiration date (mmyy, must be current month or in the future)<br> 945: Invalid CVD data (not 3-4 digits) </td> </tr> <tr class="child-tokenize"> <td>&emsp;&emsp;&emsp;&emsp;tokenization message<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"message":</code></td> <td>Provides additional details about the success or failure of the tokenization</td> </tr> <tr id="fraud" class="parent child-receiptcc" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;Fraud<br> &emsp;&emsp;&emsp;<code class="simpleCode">"fraud":{</code></td> <td>Contains sub-objects that describe information related to fraud tool inquiries</td> </tr> <tr id="cvd" class="parent child-fraud" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;CVD<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"cvd":{</code></td> <td>Contains information related to the CVD fraud tool</td> </tr> <tr class="child-cvd"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;decision origin<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"decision_origin":</code></td> <td>Possible values: Moneris or Merchant</td> </tr> <tr class="child-cvd"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;CVD result<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"result":</code></td> <td>Possible values:<br> <br> 1: Success<br> 2: Failed<br> 3: Not performed<br> 4: Card not eligible </td> </tr> <tr class="child-cvd"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;condition<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"condition":</code></td> <td>Indicates whether this fraud tool was set as a factor for Moneris to use when making an automatic decision on a transaction<br> <br> Possible values are as follows:<br> <br> 0: Optional<br> 1: Mandatory </td> </tr> <tr class="child-cvd"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;status<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"status":</code></td> <td>Indicates whether the fraud tool inquiry was performed, and if it was used for auto-decisioning purposes<br> <br> Possible values:<br> <br> success: Fraud tool successful<br> failed: Fraud tool failed (non-auto decision)<br> disabled: Fraud tool not performed<br> ineligible: Fraud tool was selected but card is not a credit card or card not eligible<br> failed_optional: Fraud tool failed and auto decision is optional<br> failed_mandatory: Fraud tool failed auto decision is mandatory </td> </tr> <tr class="child-cvd"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;CVD code<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"code":</code></td> <td>CVD result code; for a list of possible codes see the <a href="https://developer.moneris.com/More/Testing/CVD%20Result%20Codes" target="_blank">CVD Response Codes</a> reference</td> </tr> <tr class="child-cvd"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;condition<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"details":</code></td> <td>Indicates whether this fraud tool was set as a factor for Moneris to use when making an automatic decision on a transaction<br> <br> Possible values are as follows:<br> <br> 0: Optional<br> 1: Mandatory </td> </tr> <tr id="avs" class="parent child-fraud" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;AVS<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"avs":{</code></td> <td>Contains information related to the AVS fraud tool</td> </tr> <tr class="child-avs"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;decision origin<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"decision_origin":</code></td> <td>Possible values: <code class="simpleCode">Moneris</code> or <code class="simpleCode">Merchant</code></td> </tr> <tr class="child-avs"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;AVS result<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"result":</code></td> <td>Possible values:<br> <br> 1: Success<br> 2: Failed<br> 3: Not performed<br> 4: Card not eligible </td> </tr> <tr class="child-avs"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;condition<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"condition":</code></td> <td>Indicates whether this fraud tool was set as a factor for Moneris to use when making an automatic decision on a transaction<br> <br> Possible values are as follows:<br> <br> 0: Optional<br> 1: Mandatory </td> </tr> <tr class="parent child-avs"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;status<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"status":</code></td> <td>Indicates whether the fraud tool inquiry was performed, and if it was used for auto-decisioning purposes Possible values:<br> <br> success: Fraud tool successful<br> failed: Fraud tool failed (non-auto decision)<br> disabled: Fraud tool not performed<br> ineligible: Fraud tool was selected but card is not a credit card or card not eligible<br> failed_optional: Fraud tool failed and auto decision is optional<br> failed_mandatory: Fraud tool failed auto decision is mandatory </td> </tr> <tr class="parent child-avs"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;AVS code<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"code":</code></td> <td>AVS result code; for a list of potential codes, see the <a href="https://developer.moneris.com/More/Testing/AVS%20Result%20Codes" target="_blank">AVS Response Codes</a> reference</td> </tr> <tr class="child-avs"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;details<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"details":</code></td> <td>Provides detailed information about the fraud tool query<br> <br> Only populated for Kount and 3-D Secure </td> </tr> <tr id="3dsecure" class="parent child-fraud" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;3-D Secure <br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"3d_secure":{</code></td> <td>Contains information related to the 3-D Secure fraud tool</td> </tr> <tr class="child-3dsecure"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;decision origin<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"decision_origin":</code></td> <td>Possible values: <code class="simpleCode">Moneris</code> or <code class="simpleCode">Merchant</code></td> </tr> <tr class="child-3dsecure"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;3-D Secure result<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"result":</code></td> <td>Possible values:<br> <br> 1: Success<br> 2: Failed<br> 3: Not performed<br> 4: Card not eligible </td> </tr> <tr class="child-3dsecure"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;condition<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"condition":</code></td> <td>Indicates whether this fraud tool was set as a factor for Moneris to use when making an automatic decision on a transaction<br> <br> Possible values are as follows:<br> <br> 0: Optional<br> 1: Mandatory </td> </tr> <tr class="child-3dsecure"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;status<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"status":</code></td> <td>Indicates whether the fraud tool inquiry was performed, and if it was used for auto-decisioning purposes<br> <br> Possible values:<br> <br> success: Fraud tool successful<br> failed: Fraud tool failed (non-auto decision)<br> disabled: Fraud tool not performed<br> ineligible: Fraud tool was selected but card is not a credit card or card not eligible<br> failed_optional: Fraud tool failed and auto decision is optional<br> failed_mandatory: Fraud tool failed auto decision is mandatory </td> </tr> <tr class="child-3dsecure"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;3-D Secure code<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"code":</code></td> <td><a href="https://developer.moneris.com/More/Testing/CAVV%20Result%20Codes" target="_blank">CAVV result code</a></td> </tr> <tr id="3dsecureDetails" class="parent child-3dsecure" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;details<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"details":{</code></td> <td>Provides detailed information about the fraud tool query<br> <br> Only populated for Kount and 3-D Secure </td> </tr> <tr class="child-3dsecureDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Cardholder Authentication Value (CAVV)<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"cavv":</code></td> <td>Value provided by the Moneris MPI or by a third-party MPI<br> <br> Returned by Visa Secure, Mastercard Identity Check or American Express SafeKey transactions </td> </tr> <tr class="child-3dsecureDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;3-D Secure message<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"message":</code></td> <td>Describes the reasoning for the outcome of the 3-D Secure inquiry<br> <br> Possible values:<br> <br> "Authentication Not Available"<br> "Unable to Verify Enrollment"<br> "Successful Payer Authentication"<br> "Cardholder Not Participating"<br> "failed 3-D Secure authentication"<br> "Successful Merchant Attempt" </td> </tr> <tr class="child-3dsecureDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;VERes<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"VERes":</code></td> <td>Verification response code<br> <br> Possible values:<br> <br> N: The card/issuer is not enrolled<br> U: The card type is not participating<br> Y: The card is enrolled </td> </tr> <tr class="child-3dsecureDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;PARes<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"PARes":</code></td> <td>Payer Authentication response code. Possible values:<br> <br> "true": Fully authenticated or attempted to verify PIN.<br> "false": Failed to authenticate </td> </tr> <tr class="child-3dsecureDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;load 3-D Secure<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"loadvbv":</code></td> <td>Only present with value "true" if page was successfully redirected from the 3-D Secure site.</td> </tr> <tr id="kount" class="parent child-fraud" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;Kount<br> &emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"kount":{</code></td> <td>Contains information related to the Kount fraud tool</td> </tr> <tr class="child-kount"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;decision origin<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"decision_origin":</code></td> <td>Possible values: <code class="simpleCode">Moneris</code> or <code class="simpleCode">Merchant</code></td> </tr> <tr class="child-kount"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;Kount result<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"result":</code></td> <td>Possible values:<br> <br> 001: Success<br> 973: Unable to locate merchant Kount details<br> 984: Data error<br> 987: Invalid transaction<br> </td> </tr> <tr class="child-kount"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;condition<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"condition":</code></td> <td>Indicates whether this fraud tool was set as a factor for Moneris to use when making an automatic decision on a transaction<br> <br> Possible values are as follows:<br> <br> 0: Optional<br> 1: Mandatory </td> </tr> <tr class="child-kount"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;status<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"status":</code></td> <td>Indicates whether the fraud tool inquiry was performed, and if it was used for auto-decisioning purposes<br> <br> Possible values:<br> <br> success: Fraud tool successful<br> failed: Fraud tool failed (non-auto decision)<br> disabled: Fraud tool not performed<br> ineligible: Fraud tool was selected but card is not a credit card or card not eligible<br> failed_optional: Fraud tool failed and auto decision is optional<br> failed_mandatory: Fraud tool failed auto decision is mandatory </td> </tr> <tr class="child-kount"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;Kount code<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"code":</code></td> <td>Possible values:<br> <br> 001: Success<br> 973: Unable to locate merchant Kount details<br> 984: Data error<br> 987: Invalid transaction </td> </tr> <tr id="kountDetails" class="parent child-kount" style="background-color: #dbe9f1;cursor: pointer;"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;details<br> &emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"details":{</code></td> <td>Provides detailed information about the fraud tool query<br> <br> Only populated for Kount and 3-D Secure </td> </tr> <tr class="child-kountDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Kount response code<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"responseCode":</code></td> <td>Final risk score returned from Kount system</td> </tr> <tr class="child-kountDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;message (Kount)<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"message":</code></td> <td>Brief description message about the Kount inquiry</td> </tr> <tr class="child-kountDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;receipt ID<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"receiptID":</code></td> <td>The order ID echoed from the original financial transaction</td> </tr> <tr class="child-kountDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Kount result<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"receiptID":</code></td> <td>Possible values are as follows:<br> <br> 1: Success<br> 2: Failed<br> 3: Not performed<br> 4: Card not eligible </td> </tr> <tr class="child-kountDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Kount score<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"score":</code></td> <td>Final risk score returned from Kount system</td> </tr> <tr class="child-kountDetails"> <td>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Kount error<br> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<code class="simpleCode">"error":</code></td> <td>List of errors the Kount request generated</td> </tr> </table>'

document.getElementById('tableReceiptResponse').innerHTML = tableHTML;
