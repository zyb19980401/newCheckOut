{"ast":null,"code":"var _jsxFileName = \"/Users/chriszhang/Desktop/CheckOutPage/CheckOutPage/checkout/src/FrontPage/LeftMenu/PreLoadRequest.js\";\nimport React, { PureComponent } from 'react';\nlet textValue = {\n  \"store_id\": \"store2\",\n  \"api_token\": \"yesguy\",\n  \"checkout_id\": \"chktD3MM4tore2\",\n  \"txn_total\": \"2.00\",\n  \"environment\": \"qa\",\n  \"action\": \"preload\"\n};\nexport default class PreLoadRequest extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true,\n      value: \"here will be text area value, the code will be changed later\"\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n    this.textValue = {\n      \"store_id\": \"TBD\",\n      \"api_token\": \"TBD\",\n      \"checkout_id\": \"TBD\",\n      \"txn_total\": \"2.00\",\n      \"environment\": \"qa\",\n      \"action\": \"preload\"\n    };\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    console.log(this.textValue);\n    console.log(this.props.StoreId);\n    console.log(this.props.ApiToken);\n    console.log(this.props.CheckOutId);\n\n    if (this.state.isToggleOn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"accordion\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 74\n        }\n      }, \"\\u2462\\xA0\\xA0\"), \"PreLoadRequest\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"accordion\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 78\n        }\n      }, \"\\u2462\\xA0\\xA0\"), \"PreLoadRequest\")), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"The Preload request is the means by which a Moneris Checkout instance is securely generated at transaction time. It involves a server-to-server post using the JSON format.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 200\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 209\n        }\n      }), \"The response to the Preload request returns a ticket number which uniquely identifies the instance and must be passed in the JavaScript \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 165\n        }\n      }, \"monerisCheckout.startCheckout(ticket #)\"), \" request in order to display the Moneris Checkout page in the browser.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 281\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 290\n        }\n      }), \"In your server implementation, use the following Moneris Checkout URLs to post to, depending on the development stage:\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 147\n        }\n      }), \"Testing: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }\n      }, \"https://gatewayt.moneris.com/chkt/request/request.php\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 98\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 107\n        }\n      }), \"Production: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }\n      }, \"https://gateway.moneris.com/chkt/request/request.php\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 100\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 109\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"preloadRequestCode\",\n        value: this.state.value,\n        rows: \"9\",\n        cols: \"50\",\n        spellcheck: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn\",\n        onclick: \"preloadRequestFunction(document.getElementById('preloadRequestCode').value)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, \"Make Preload Request\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 38\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"morePreload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, \"Request fields for Preload request \\u2013 Required\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"tablePreloadRequest\",\n        style: {\n          fontSize: \"12px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 42\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"more\",\n        id: \"btnMoreLessPreload\",\n        onclick: \"readMoreLess('morePreload', 'btnMoreLessPreload')\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, \"Read more\"))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/chriszhang/Desktop/CheckOutPage/CheckOutPage/checkout/src/FrontPage/LeftMenu/PreLoadRequest.js"],"names":["React","PureComponent","textValue","PreLoadRequest","constructor","props","state","isToggleOn","value","handleClick","bind","setState","render","console","log","StoreId","ApiToken","CheckOutId","fontSize"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\n\nlet textValue = {\n    \"store_id\":\"store2\",\n    \"api_token\":\"yesguy\",\n    \"checkout_id\":\"chktD3MM4tore2\",\n    \"txn_total\":\"2.00\",\n    \"environment\":\"qa\",\n    \"action\":\"preload\"\n};\n\nexport default class PreLoadRequest extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = { isToggleOn: true, value: \"here will be text area value, the code will be changed later\" }\n\n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n        \n        this.textValue = {\n            \"store_id\":\"TBD\",\n            \"api_token\":\"TBD\",\n            \"checkout_id\":\"TBD\",\n            \"txn_total\":\"2.00\",\n            \"environment\":\"qa\",\n            \"action\":\"preload\"\n        };\n    }\n\n    handleClick() {\n        this.setState(state => ({\n            isToggleOn: !state.isToggleOn\n        }));\n    }\n    \n\n    render() {\n        \n        console.log(this.textValue)\n        console.log(this.props.StoreId)\n        console.log(this.props.ApiToken)\n        console.log(this.props.CheckOutId) \n        if (this.state.isToggleOn) {\n            return (\n                <div>\n                    <button class=\"accordion\" onClick={this.handleClick}><span class=\"number\">&#9314;&nbsp;&nbsp;</span>PreLoadRequest</button>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <div>\n                        <button class=\"accordion\" onClick={this.handleClick}><span class=\"number\">&#9314;&nbsp;&nbsp;</span>PreLoadRequest</button>\n                    </div>\n                    <div class=\"panel\">\n                        <p>\n                            The Preload request is the means by which a Moneris Checkout instance is securely generated at transaction time. It involves a server-to-server post using the JSON format.<br></br><br></br>\n                            The response to the Preload request returns a ticket number which uniquely identifies the instance and must be passed in the JavaScript <b>monerisCheckout.startCheckout(ticket #)</b> request in order to display the Moneris Checkout page in the browser.<br></br><br></br>\n                            In your server implementation, use the following Moneris Checkout URLs to post to, depending on the development stage:<br></br>\n                            Testing: <b>https://gatewayt.moneris.com/chkt/request/request.php</b><br></br><br></br>\n                            Production: <b>https://gateway.moneris.com/chkt/request/request.php</b><br></br><br></br>\n                            <textarea id=\"preloadRequestCode\" value={this.state.value} rows=\"9\" cols=\"50\" spellcheck=\"false\">\n                            </textarea>\n                            <button class=\"btn\" onclick=\"preloadRequestFunction(document.getElementById('preloadRequestCode').value)\">Make Preload Request</button>\n                            <br></br><br></br>\n                            <div id=\"morePreload\">\n                                <h3>Request fields for Preload request &ndash; Required</h3>\n                                <div id=\"tablePreloadRequest\" style={{ fontSize: \"12px\" }}>#</div>\n                                <br></br><br></br>\n                            </div>\n                            <button class=\"more\" id=\"btnMoreLessPreload\" onclick=\"readMoreLess('morePreload', 'btnMoreLessPreload')\">Read more</button>\n                        </p>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}